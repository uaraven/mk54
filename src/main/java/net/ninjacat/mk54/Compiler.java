package net.ninjacat.mk54;

import com.google.common.collect.ImmutableList;
import jdk.internal.org.objectweb.asm.Type;
import org.objectweb.asm.*;

import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.regex.Pattern;

public class Compiler {

    private static final Locale LOCALE = Locale.forLanguageTag("uk");
    private static final Pattern WHITESPACE = Pattern.compile("\\s+");

    private final List<String> instructions;
    private final Iterator<String> instructionPointer;

    /**
     * Creates a compiler for a given MK program
     *
     * @param hexcodes MK program in hex codes
     */
    public Compiler(final String hexcodes) {
        this.instructions = ImmutableList.copyOf(WHITESPACE.split(hexcodes.toUpperCase(LOCALE)));
        this.instructionPointer = this.instructions.iterator();
    }

    public void generate() throws IOException {
        final ClassReader reader = new ClassReader(Mk54.class.getName());
        final ClassWriter writer = new ClassWriter(reader, ClassWriter.COMPUTE_FRAMES);

        writer.visit(Opcodes.V1_8, Opcodes.ACC_PUBLIC, "Mk54", null, null, null);

        final MethodVisitor executeMethod = writer.visitMethod(Opcodes.ACC_PRIVATE, "execute", "()V", null, new String[]{
                Type.getInternalName(Exception.class)
        });

        generateByteCode(writer, executeMethod);

        writer.visitEnd();
    }

    /**
     * Generates bytecode from Mk codes
     *
     * @param executeMethod Method visitor for {@link Mk54#execute()} method which will be modified with generated bytecode
     */
    private void generateByteCode(final ClassVisitor cv, final MethodVisitor executeMethod) {


    }
}
